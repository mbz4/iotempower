#!/usr/bin/env bash
# Example script for starting the IoTempower environment
# Modify IOTEMPOWER_ROOT accordingly to your setup
#
# If you run in termux, apply termux-fix shebang onto this script

# if this should run as root make sure to fix $HOME like this:
# HOME=/home/pi

export IOTEMPOWER_PODMAN_NAME="iotempower"
export IOTEMPOWER_PODMAN_SHARE="$HOME/iot-docker"
export IOTEMPOWER_PODMAN_CONTAINER_DIR="/iot/data"
export IOTEMPOWER_ROOT="$IOTEMPOWER_PODMAN_SHARE/iot"

function start() {
  # Get the absolute path of the current directory, resolving symlinks
  CURRENT_DIR=$(realpath $(pwd))

  # Check if the current directory is within the mounted host directory
  if [[ "$CURRENT_DIR" =~ ^"$IOTEMPOWER_PODMAN_SHARE" ]]; then
    # Calculate the corresponding directory inside the container
    CONTAINER_PATH="$IOTEMPOWER_PODMAN_CONTAINER_DIR${CURRENT_DIR#$IOTEMPOWER_PODMAN_SHARE}"
    # Enter the Podman container at the corresponding directory
    # Forward all input parameters from "$@" (this is a bit tricky as it needs to go into podman exec)
    PARAMS=""
    for p in "$@"; do
      # Escape all internal quotes within the parameter
      p="${p//\"/\\\"}"
      PARAMS+="\"$p\" "
    done
    # Trim the trailing space
    PARAMS="${PARAMS% }"
    # if the "bash" is not given, the unpacking of the tar file does not happen
    # TODO: test why this does not work
    exec podman exec -it "$IOTEMPOWER_PODMAN_NAME" \
      /bin/bash -c "cd \"$CONTAINER_PATH\" && exec bash iot $PARAMS"
  else
    echo "Current directory is outside the mounted volume."
    # Just enter the container without changing the directory but still forward parameters
    exec podman exec -it "$IOTEMPOWER_PODMAN_NAME" "iot" "$@"
  fi
}

if podman ps -q | grep -q "$IOTEMPOWER_PODMAN_NAME"; then
  start "$@"
  # # Check if the container is already running
  # if podman list --quiet | grep -qw $IOTEMPOWER_PODMAN_NAME; then
  #   exec podman exec -it "$IOTEMPOWER_PODMAN_NAME" "iot" "$@"
  # else
  #   # Podman doesn't support starting existing containers, it needs recreating
  #   echo "Container not found, starting a new one..."
  #   podman run -d --rm --name "$IOTEMPOWER_PODMAN_NAME" \
  #     -p 40080:40080 \
  #     -p 1883:1883 \
  #     -v "$IOTEMPOWER_PODMAN_SHARE:/iot/data" \
  #     ulno/iotempower > /dev/null
  #   start "$@"
  # fi
else
  podman run -d --rm --name "$IOTEMPOWER_PODMAN_NAME" \
    -p 40080:40080 \
    -p 1883:1883 \
    -v "$IOTEMPOWER_PODMAN_SHARE:/iot/data" \
    ulno/iotempower > /dev/null
  start "$@"
fi
