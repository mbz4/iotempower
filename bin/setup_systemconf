#!/usr/bin/env bash
if [[ $# -gt 4 || "$*" = "help" || "$*" = "-h" || "$*" = "--help" ]]; then
cat << EOF

this must be called from a node directory (or one of its parent system
directories) and reads it will set the gateway wifi configurartion of that system (SSID, password, gateway IP).

It rebuilds firmwares for the affected nodes and remotely flashes
the respected nodes.

If credentials are given, it over writes the global wifi configuration.
Else it the gateway configuration is set to the default global values

If you are running all systems from same gateway, you can also change the credentials by creating an iotempower.conf file in iot/etc/
Copy the iotempower.conf.example file, (delete the .example extension) and adjust the values.

EOF
exit 1
fi

# TODO: add option to specify input file with list of specific nodes to deploy

[ "$IOTEMPOWER_ACTIVE" = "yes" ] || { echo "IoTempower not active, aborting." 1>&2;exit 1; }

source $IOTEMPOWER_ROOT/etc/wifi_credentials

user_input_wifi_credentials(){
        #Write settings to file
        cat << EOF > system.conf
         # Everything from etc/iotempower.conf can be overwritten here.
# However, you will usually just overwrite the MQTT-Host and maybe
# wifi access information

# Name of accesspoint to connect to
IOTEMPOWER_AP_NAME="$IOTEMPOWER_AP_NAME"

# Its wifi password
IOTEMPOWER_AP_PASSWORD="$IOTEMPOWER_AP_PASSWORD"

# IP to pick
IOTEMPOWER_AP_IP="$IOTEMPOWER_AP_IP"

# Connect data for local MQTT broker
# If not defined, the same as IOTEMPOWERAP_IP from $IOTEMPWOER_ROOT/etc/iotempower.conf default
IOTEMPOWER_MQTT_HOST="$IOTEMPOWER_AP_IP"
EOF
echo "Done. Your local wifi configuration is now set up in your system.conf file"
echo "PRESS CTRL+D to exit"
exit 0
}
if [[ -e "system.conf" ]]; then  # started from system-directory
user_input_wifi_credentials

else
    echo "You must be inside a system folder (or it's subfolders) to run this script"
    echo "It must contain a file named system.conf"
    echo "Please navigate to a IoT system folder (ussually in iot-system/your project) and try again"
     echo "No system.conf found, aborting."
    exit 1
fi
